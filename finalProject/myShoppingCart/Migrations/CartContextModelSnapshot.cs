// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using myShoppingCart.ViewModels;

#nullable disable

namespace myShoppingCart.Migrations
{
    [DbContext(typeof(CartContext))]
    partial class CartContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("myShoppingCart.Models.Category", b =>
                {
                    b.Property<int>("categoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("categoryId"));

                    b.Property<string>("categoryDesc")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("categoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("modifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("categoryId");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            categoryId = 1,
                            categoryDesc = "training courses for cats",
                            categoryName = "cat",
                            createdAt = new DateTime(2024, 4, 8, 8, 32, 34, 244, DateTimeKind.Utc).AddTicks(8828),
                            modifiedAt = new DateTime(2024, 4, 8, 8, 32, 34, 244, DateTimeKind.Utc).AddTicks(8831)
                        },
                        new
                        {
                            categoryId = 2,
                            categoryDesc = "training courses for small dogs",
                            categoryName = "dog(s)",
                            createdAt = new DateTime(2024, 4, 8, 8, 32, 34, 244, DateTimeKind.Utc).AddTicks(8837),
                            modifiedAt = new DateTime(2024, 4, 8, 8, 32, 34, 244, DateTimeKind.Utc).AddTicks(8837)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
